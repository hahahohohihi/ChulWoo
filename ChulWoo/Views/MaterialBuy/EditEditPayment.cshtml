@model ChulWoo.Viewmodel.MaterialBuyPaymentData
@using ChulWoo.Helper;
@using ChulWoo.Models;

@{
    ViewBag.Title = "EditAddPayment";
}

<h2>EditAddPayment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MaterialBuy</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaterialBuy.ID)
        @Html.HiddenFor(model => model.MaterialBuy.CompanyID)
        @Html.HiddenFor(model => model.MaterialBuy.ProjectID)

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.MaterialBuy.Company.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MaterialBuy.Company.Name)
            </dd>

            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.MaterialBuy.Project.NameKr)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.MaterialBuy.Project.NameKr)
                </dd>
            }
            else
            {
                <dt>
                    @Html.DisplayNameFor(model => model.MaterialBuy.Project.NameVn)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.MaterialBuy.Project.NameVn)
                </dd>
            }

            <dt>
                @Html.DisplayNameFor(model => model.MaterialBuy.Date)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MaterialBuy.Date)
            </dd>

        </dl>
        <h4>Material Unit</h4>

        <table class="table">
            <tr>
                <th>@Resource.MaterialName</th>
                <th>@Resource.Unit</th>
                <th>@Resource.Quantity</th>
                <th>@Resource.UnitPrice</th>
                <th>@Resource.Price</th>
                <th></th>
            </tr>
            @if (Model.MaterialBuy.MaterialBuyUnits != null && Model.MaterialBuy.MaterialBuyUnits.Count != 0)
            {
                double totalPrice = 0;
                foreach (var item in Model.MaterialBuy.MaterialBuyUnits)
                {
                    <tr>
                        <td>
                            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                            {
                                @item.MaterialUnitPrice.MaterialName.NameKr
                            }
                            else
                            {
                                @item.MaterialUnitPrice.MaterialName.NameVn
                            }
                        </td>
                        <td>
                            @item.MaterialUnitPrice.UnitString
                        </td>
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MaterialUnitPrice.Price)
                        </td>
                        <td>
                            @{
                                var price = item.Quantity * item.MaterialUnitPrice.Price;
                                totalPrice = totalPrice + (double)price;
                            }
                            @String.Format("{0:0,0}", price)
                        </td>
                    </tr>
                }
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th>VAT</th>
                        <th>
                            @if (Model.MaterialBuy.VAT == true)
                            {
                                @String.Format("{0:0,0}", totalPrice * 0.1)
                            }
                            else
                            {
                                @String.Format("{0:0,0}", 0)
                            }
                        </th>
                        <th></th>
                    </tr>
                    <tr>
                        <th></th>
                        <th></th>
                        <th></th>
                        <th>Total Price</th>
                        <th>
                            @if (Model.MaterialBuy.VAT == true)
                            {
                                @String.Format("{0:0,0}", totalPrice * 1.1)
                            }
                            else
                            {
                                @String.Format("{0:0,0}", totalPrice * 1.0)
                            }
                        </th>
                        <th></th>
                    </tr>

            }
        </table>

        <h4>Material Payment</h4>
        <table class="table">
            <tr>
                <th>@Resource.Date</th>
                <th>@Resource.PaymentType</th>
                <th>@Resource.Amount</th>
                <th>@Resource.AmountString</th>
                <th>@Resource.Note</th>
                <th></th>
            </tr>
            @if (Model.MaterialBuy.Payments != null && Model.MaterialBuy.Payments.Count != 0)
            {
                foreach (var item in Model.MaterialBuy.Payments)
                {
                    if (item.ID != Model.Payment.ID)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(model => item.Date)
                            </td>
                            <td>
                                @EnumExtensions.GetDisplayName(item.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(model => item.AmountString)
                            </td>
                            <td>
                                @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                                {
                                    @item.NoteVn
                                }
                                else
                                {
                                    @item.NoteVn
                                }
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditEditPayment", new { id = Model.MaterialBuy.ID, paymentid = item.ID }) |
                                @Html.ActionLink("Delete", "DeletePayment", new { id = Model.MaterialBuy.ID, paymentid = item.ID })
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <th>
                                @Html.EditorFor(model => model.Payment.Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Payment.Date, "", new { @class = "text-danger" })
                            </th>
                            <th>
                                @Html.EnumDropDownListFor(model => model.Payment.Type, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Payment.Type, "", new { @class = "text-danger" })
                            </th>
                            <th>
                                @Html.TextBoxFor(model => model.Payment.Amount, "{0:0.00}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Payment.Amount, "", new { @class = "text-danger" })
                            </th>
                            <th>
                                @Html.EditorFor(model => model.Payment.AmountString, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Payment.AmountString, "", new { @class = "text-danger" })
                            </th>
                            <th>
                                @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                                {
                                    @Html.EditorFor(model => model.Payment.NoteKr, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Payment.NoteKr, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.EditorFor(model => model.Payment.NoteVn, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Payment.NoteVn, "", new { @class = "text-danger" })
                                }
                            </th>
                            <th>
                                <input type="submit" value="Add" class="btn btn-default" />
                            </th>
                        </tr>
                    }
                }
            }
        </table>






    </div>
}

<div>
    @Html.ActionLink("Back to Edit", "Edit", new { id = Model.MaterialBuy.ID }) |
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
