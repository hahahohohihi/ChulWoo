@model ChulWoo.Models.MaterialBuy
@using ChulWoo.Helper;

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>


<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#CompanyName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Company/SetNameList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name };
                        }))

                    }
                })
            }
        });
    })
</script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MaterialBuy</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Company.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Company.Name, new { htmlAttributes = new { @id = "CompanyName", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Company.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.NameKr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoteVn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NoteVn, new { @Style = "height:100px; width:100%;" })
                @Html.ValidationMessageFor(model => model.NoteVn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoteKr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NoteKr, new { @Style = "height:100px; width:100%;" })
                @Html.ValidationMessageFor(model => model.NoteKr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VATPer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.VATPer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VATPer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Translate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Translate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Translate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>



        <table cellpadding="10pt">
            <tr>
                <th valign="bottom" style="padding-right:12pt">
                    <h3>Material Unit</h3>
                </th>
                <th valign="bottom" style="padding-bottom:5pt">
                    @Html.ActionLink("Edit", "EditAddUnit", new { id = Model.ID })
                </th>
            </tr>
        </table>


        <table class="table">
            <tr>
                <th></th>
                <th>@Resource.MaterialName</th>
                <th>@Resource.Unit</th>
                <th>@Resource.Quantity</th>
                <th>@Resource.UnitPrice</th>
                <th>@Resource.Currency</th>
                <th>@Resource.Price</th>
                <th></th>
            </tr>
            @if (Model.MaterialBuyUnits != null && Model.MaterialBuyUnits.Count != 0)
            {

                foreach (var item in Model.MaterialBuyUnits)
                {
                    string selectedRow = "";
                    if (item.ID == ViewBag.CourseID)
                    {
                        selectedRow = "success";
                    }
                    <tr class="@selectedRow">
                        <td>
                            @*Html.ActionLink("Delete", "Details", new { id = Model.ID, contractsID = item.ID })*@
                        </td>
                        <td>
                            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                            {
                                @item.MaterialUnitPrice.MaterialName.NameKr
                            }
                            else
                            {
                                @item.MaterialUnitPrice.MaterialName.NameVn
                            }
                        </td>
                        <td>
                            @item.MaterialUnitPrice.UnitString
                        </td>
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MaterialUnitPrice.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.MaterialUnitPrice.Currency)
                        </td>
                        <td>
                            @{
                                var price = item.Quantity * item.MaterialUnitPrice.Price;
                            }
                            @String.Format("{0:0,0}", price)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditEditUnit", new { id = Model.ID, unitid = item.ID }) | 
                            @Html.ActionLink("Delete", "DeleteUnit", new { id = Model.ID, unitid = item.ID })
                        </td>

                    </tr>
                }
            }
        </table>

        <br />

        <table cellpadding="10pt">
            <tr>
                <th valign="bottom" style="padding-right:15pt">
                    <h3>Material Payment</h3>
                </th>
                <th valign="bottom" style="padding-bottom:5pt;padding-right:15pt">
                    @Html.ActionLink("Edit", "EditAddPayment", new { id = Model.ID })
                </th>
                <th valign="bottom" style="padding-bottom:5pt">
                    @Html.ActionLink("All Payment", "AddAllPayment", new { id = Model.ID })
                </th>
            </tr>
        </table>


        <table class="table">
            <tr>
                <th>@Resource.Date</th>
                <th>@Resource.PaymentType</th>
                <th>@Resource.Amount</th>
                <th>@Resource.Currency</th>
                <th>@Resource.AmountString</th>
                <th>@Resource.Note</th>
                <th></th>
            </tr>
            @if (Model.Payments != null && Model.Payments.Count != 0)
            {

                foreach (var item in Model.Payments)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Date)
                        </td>
                        <td>
                            @EnumExtensions.GetDisplayName(item.Type)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Amount)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Currency)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.AmountString)
                        </td>
                        <td>
                            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                            {
                                @item.NoteVn
                            }
                            else
                            {
                                @item.NoteVn
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditEditPayment", new { id = Model.ID, paymentid = item.ID }) |
                            @Html.ActionLink("Details", "EditDetailsPayment", new { id = Model.ID, paymentid = item.ID }) |
                            @Html.ActionLink("Delete", "DeletePayment", new { id = Model.ID, paymentid = item.ID })
                        </td>
                    </tr>
                }
            }
        </table>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
