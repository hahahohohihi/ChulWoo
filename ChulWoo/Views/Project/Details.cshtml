@model ChulWoo.Models.Project
@using ChulWoo.Models;
@using ChulWoo.Helper;

@{
    ViewBag.Title = "Details";
}

<h2>
    @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
    {
        @Html.DisplayFor(model => model.NameKr)
    }
    else
    {
        @Html.DisplayFor(model => model.NameVn)
    }
</h2>

<table width="100%">
    <tr>
        <th style="text-align: left;">
            @Html.ActionLink("DetailsWorkProcess", "DetailsWorkProcess", new { id = Model.ID })
        </th>
        <th style="text-align: right;">
            @Html.ActionLink("DailyWorkReport", "Index", "DailyWork", new { projectid = Model.ID }, null)
        </th>
    </tr>
</table>

<hr />
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Company.Name)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Company.Name)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Date)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Date)
    </dd>

    <dt>@Resource.TotalDeposit</dt>
    <dd>@String.Format("{0:0,0}", @ViewBag.TotalDeposit)</dd>
    <dt>@Resource.TotalContractPrice</dt>
    <dd>@String.Format("{0:0,0}", @ViewBag.TotalPrice + @ViewBag.TotalVAT) (VAT @String.Format("{0:0,0}", @ViewBag.TotalVAT))</dd>
    <dt>@Resource.TotalPayment</dt>
    <dd>@String.Format("{0:0,0}", @ViewBag.TotalPayment)</dd>
</dl>


@using (Html.BeginForm("Details", "Project", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    if (Convert.ToInt32(Context.Session["LoginUserSecurity"]) >= Convert.ToInt32(Security.Personnel))
    {
        <table width="100%">
            <tr>
                <td>
                    <ul class="attachment">
                        @foreach (var item in Model.UploadFiles)
                        {
                            if (item.Security == false)
                            {
                                <li>
                                    <a class="title" href="/UploadFile/@item.FolderName/@item.SaveFileName">@item.FileName</a>  |
                                    <a class="title" href="/Board/Download/?SFilename=@(item.FolderName + "/" + item.SaveFileName)&Filename=@item.FileName">Download</a>
                                </li>
                            }
                        }
                    </ul>
                </td>
                @if (Convert.ToInt32(Context.Session["LoginUserSecurity"]) >= Convert.ToInt32(Security.Power))
                {
                    <td>
                        <div class="editor-field">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="file" name="file" multiple="multiple" />
                                <input type="submit" value="Save" class="btn btn-default" />

                                <ul class="attachment">
                                    @foreach (var item in Model.UploadFiles)
                                    {
                                        if (item.Security == true)
                                        {
                                            <li>
                                                <a class="title" href="/UploadFile/@item.FolderName/@item.SaveFileName">@item.FileName</a> |
                                                <a class="title" href="/Board/Download/?SFilename=@(item.FolderName + "/" + item.SaveFileName)&Filename=@item.FileName">Download</a> |
                                                <a href="javascript:void(0);" data-id="@item.ID" id="deleteitem" class="deleteitem">Delete</a>
                                            </li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </td>
                }
            </tr>
        </table>
    }
}

<br />

<table cellpadding="10pt">
    <tr>
        <th valign="bottom" style="padding-right:12pt">
            <h3>Make Receipt</h3>
        </th>
        <th valign="bottom" style="padding-bottom:5pt">
            @Html.ActionLink("Add", "EditAddMakeReceipt", new { id = Model.ID })
        </th>
    </tr>
</table>


<table class="table">
    <tr>
        <th width="8%">@Resource.Date</th>
        <th width="20%">@Resource.Name</th>
        <th width="10%">@Resource.Amount</th>
        <th width="8%">VATPer</th>
        <th width="10%">@Resource.Deposit</th>
        <th width="30%">@Resource.Note</th>
        <th width="14%"></th>
    </tr>
    @if (Model.MaterialBuys != null && Model.MaterialBuys.Count != 0)
    {

        foreach (var item in Model.MaterialBuys)
        {
            if (item.MaterialBuyType == MaterialBuyType.MakeReceipt)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.MaterialBuyUnits.FirstOrDefault().MaterialUnitPrice.MaterialName.NameVn)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.MaterialBuyUnits.FirstOrDefault().MaterialUnitPrice.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.VATPer)
                    </td>
                    <td>
                        @{
                            var deposit = item.Payments.Where(p=>p.StatementType == StatementType.Deposit && p.MaterialBuys.Count(m=>m.ID == item.ID)>0)
                                .Sum(p => p.Amount);
                        }
                        @String.Format("{0:0,0}", deposit)
                    </td>
                    <td>
                        @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                        {
                            @item.NoteVn
                        }
                        else
                        {
                            @item.NoteVn
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Deposit", "AddAllDeposit", new { id = Model.ID, makereceiptid = item.ID }) |
                        @Html.ActionLink("Edit", "EditEditMakeReceipt", new { id = Model.ID, makereceiptid = item.ID }) |
                        @Html.ActionLink("Delete", "DeleteMakeReceipt", new { id = Model.ID, makereceiptid = item.ID })
                    </td>
                </tr>
            }
        }
    }
</table>


<table style="margin-left:40pt">
    <tr>
        <th valign="bottom" style="padding-right:12pt">
            <h4>Deposit</h4>
        </th>
        @*
        <th valign="bottom" style="padding-bottom:5pt">
            @Html.ActionLink("Add", "EditAddDeposit", new { id = Model.ID })
        </th>
        *@
    </tr>
</table>


<table class="table" style="margin-left:40pt">
    <tr>
        <th>@Resource.Date</th>
        <th>@Resource.PaymentType</th>
        <th>@Resource.Amount</th>
        <th>@Resource.Note</th>
        <th></th>
    </tr>
    @if (Model.Deposits != null && Model.Deposits.Count != 0)
    {

        foreach (var item in Model.Deposits)
        {
            if (item.StatementType == StatementType.Deposit)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.Date)
                    </td>
                    <td>
                        @EnumExtensions.GetDisplayName(item.Type)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.Amount)
                    </td>
                    <td>
                        @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                        {
                            @item.NoteVn
                        }
                        else
                        {
                            @item.NoteVn
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditEditDeposit", new { id = Model.ID, depositid = item.ID }) |
                        @Html.ActionLink("Delete", "DeleteDeposit", new { id = Model.ID, depositid = item.ID })
                    </td>
                </tr>
            }
        }
    }
</table>

<br />

@if (Model.MaterialBuys.Count != 0)
{
    <h3>Material Buy</h3>

    <table class="table">
        @{
            MaterialBuy tempitem = null;
            double subtotal = 0;
            double vat = 0;
            double payment = 0;
            foreach (var item in Model.MaterialBuys)
            {
                if (item.MaterialBuyType == MaterialBuyType.MaterialBuy)
                {
                    if (tempitem == null || tempitem.Date != item.Date)
                    {
                        if (tempitem != null)
                        {
                            <tr>
                                <th colspan="3" height="20"></th>
                                <th>소계</th>
                                <th colspan="2" style="text-align: right;">@String.Format("{0:0,0} (VAT {1:0,0})", subtotal + vat, vat)</th>
                            </tr>
                            <tr>
                                <th colspan="3" height="20"></th>
                                <th>Payment</th>
                                <th colspan="2" style="text-align: right;">@String.Format("{0:0,0}", payment)</th>
                            </tr>
                            subtotal = 0;
                            vat = 0;
                            payment = 0;
                        }

                        <tr>
                            <td colspan="6">
                                <b>@Html.DisplayNameFor(model => item.Date)</b> @Html.DisplayFor(model => item.Date)
                            </td>
                        </tr>
                        <tr>
                            <th>@Resource.CompanyName</th>
                            <th>@Resource.MaterialName</th>
                            <th>@Resource.Unit</th>
                            <th>@Resource.Quantity</th>
                            <th style="text-align: right;">@Resource.UnitPrice</th>
                            <th style="text-align: right;">@Resource.Price</th>
                        </tr>
                    }
                    foreach (var unit in item.MaterialBuyUnits)
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(item.Company.Name, "Details", "Company", new { id = item.CompanyID }, null)
                            </td>
                            <td>
                                @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                                {
                                    @Html.ActionLink(unit.MaterialUnitPrice.MaterialName.NameKr, "Details", "MaterialBuy", new { id = item.ID }, null)
                                }
                                else
                                {
                                    @Html.ActionLink(unit.MaterialUnitPrice.MaterialName.NameVn, "Details", "MaterialBuy", new { id = item.ID }, null)
                                }
                                @*if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                                {
                                    @Html.ActionLink(unit.MaterialUnitPrice.MaterialName.NameKr, "Details", "MaterialBuy", new { id = unit.MaterialBuyID }, null)
                                }
                                else
                                {
                                    @Html.ActionLink(unit.MaterialUnitPrice.MaterialName.NameVn, "Details", "MaterialBuy", new { id = unit.MaterialBuyID }, null)
                                }*@
                            </td>
                            <td>
                                @unit.MaterialUnitPrice.UnitString
                            </td>
                            <td>
                                @unit.Quantity
                            </td>
                            <td style="text-align: right;">
                                @Html.DisplayFor(model => unit.MaterialUnitPrice.Price)
                            </td>
                            <td style="text-align: right;">
                                @{
                                    var price = unit.Quantity * unit.MaterialUnitPrice.Price;
                                    subtotal = subtotal + (double)price;
                                    vat = vat + ((double)price * unit.MaterialBuy.VATPer);
                                }
                                @String.Format("{0:0,0}", price)

                            </td>

                        </tr>
                    }
                    foreach( var pay in item.Payments)
                    {
                        if( pay.MaterialBuys.Count() > 1 )
                        {
                            foreach( var mb in pay.MaterialBuys)
                            {
                                if( mb.ProjectID == Model.ID )
                                {
                                    foreach (var u in mb.MaterialBuyUnits)
                                    {
                                        payment = payment + (double)((u.Quantity * u.MaterialUnitPrice.Price) * (double)(1+u.MaterialBuy.VATPer));
                                    }
                                }
                            }
                        }
                        else
                        {
                            payment = payment + pay.Amount;
                        }
                    }
                    tempitem = item;
                }
            }
        }
        <tr>
            <th colspan="3" height="20"></th>
            <th>소계</th>
            <th colspan="2" style="text-align: right;">@String.Format("{0:0,0} (VAT {1:0,0})", subtotal + vat, vat)</th>
        </tr>
        <tr>
            <th colspan="3" height="20"></th>
            <th>Payment</th>
            <th colspan="2" style="text-align: right;">@String.Format("{0:0,0}", payment)</th>
        </tr>

    </table>
}

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
