@model ChulWoo.Viewmodel.FactoryDailyWorkUnitData
@using ChulWoo.Helper;
@using ChulWoo.Models;

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FactoryDailyWork</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.DailyWork.ID)

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.DailyWork.ProparingPerson.Name)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DailyWork.ProparingPerson.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DailyWork.Date)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DailyWork.Date)
            </dd>
            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.DailyWork.NoteKr)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DailyWork.NoteKr)
                </dd>
            }
            else
            {
                <dt>
                    @Html.DisplayNameFor(model => model.DailyWork.NoteVn)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.DailyWork.NoteVn)
                </dd>
            }
        </dl>




        <table>
            <tr>
                <th valign="bottom" style="padding-right:12pt"><h4>Work Unit</h4></th>
            </tr>
        </table>

        <table class="table">
            <tr>
                <th>@Resource.ProjectName</th>
                <th>@Resource.EquipCount</th>
                <th>@Resource.Note</th>
                <th></th>
            </tr>
            @if (Model.DailyWork.FactoryWorkUnits != null && Model.DailyWork.FactoryWorkUnits.Count != 0)
            {

                foreach (var item in Model.DailyWork.FactoryWorkUnits)
                {
                    <tr>
                        <td>
                            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                            {
                                @item.Project.NameKr
                            }
                            else
                            {
                                @item.Project.NameVn
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.EquipCount)
                        </td>
                        <td>
                            @if (Convert.ToInt32(Context.Session["CurrentCulture"]) == 2)
                            {
                                @Html.TextAreaFor(model => item.NoteKr, new { @class = "form-control", @Style = "height:100px; width:100%;", @readonly = true })
                            }
                            else
                            {
                                @Html.TextAreaFor(model => item.NoteVn, new { @class = "form-control", @Style = "height:100px; width:100%;", @readonly = true })
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "EditEditWorkUnit", new { id = Model.DailyWork.ID, workunitid = item.ID }) |
                            @Html.ActionLink("Delete", "DeleteWorkUnit", new { id = Model.DailyWork.ID, workunitid = item.ID })
                        </td>
                    </tr>
                }
            }
            <tr>
                <th>
                    @Html.DropDownListFor(model => model.WorkUnit.ProjectID, (IEnumerable<SelectListItem>)ViewBag.ProjectID, htmlAttributes: new { @class = "form-control" })
                    @*Html.DropDownList("ProjectID", null, htmlAttributes: new { @class = "form-control" })*@
                    @Html.ValidationMessageFor(model => model.WorkUnit.ProjectID, "", new { @class = "text-danger" })
                </th>
                <th>
                    @Html.EditorFor(model => model.WorkUnit.EquipCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WorkUnit.EquipCount, "", new { @class = "text-danger" })
                </th>
                <th>
                    @Html.TextAreaFor(model => model.WorkUnit.NoteVn, new { @class = "form-control", @Style = "height:100px; width:100%;" })
                    @Html.ValidationMessageFor(model => model.WorkUnit.NoteVn, "", new { @class = "text-danger" })
                </th>
                <th>
                    <input type="submit" value="Add" class="btn btn-default" />
                </th>
            </tr>
        </table>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
